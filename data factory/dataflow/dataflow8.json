{
	"name": "dataflow8",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "active",
						"type": "DatasetReference"
					},
					"name": "active"
				},
				{
					"dataset": {
						"referenceName": "exist",
						"type": "DatasetReference"
					},
					"name": "exist"
				},
				{
					"dataset": {
						"referenceName": "sphy",
						"type": "DatasetReference"
					},
					"name": "sphy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo1"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo2"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select3"
				}
			],
			"script": "source(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as string,\n\t\t{ Battery Level} as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Temperature} as string,\n\t\t{ Step} as string,\n\t\t{ Calorie} as string,\n\t\t{ Sleep State} as string,\n\t\t{ Sleep Hour} as string,\n\t\t{ Sleep Minute} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> active\nsource(output(\n\t\tDevice as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Exist} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> exist\nsource(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as string,\n\t\t{ Battery Level} as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Systolic Pressure} as string,\n\t\t{ Diastolic Pressure} as string,\n\t\t{ Mean Arterial Pressure} as string,\n\t\t{ Pulse Rate} as string,\n\t\t{ Irregular Pulse Flag} as string,\n\t\t{ Pulse Rate Range Detection Flag} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sphy\nactive select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nexist select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nsphy select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo1\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo2"
		}
	}
}