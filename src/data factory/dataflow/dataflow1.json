{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sa_01",
						"type": "DatasetReference"
					},
					"name": "sa01"
				},
				{
					"dataset": {
						"referenceName": "li_02",
						"type": "DatasetReference"
					},
					"name": "li02"
				},
				{
					"dataset": {
						"referenceName": "ev_05",
						"type": "DatasetReference"
					},
					"name": "ev05"
				},
				{
					"dataset": {
						"referenceName": "ev_05",
						"type": "DatasetReference"
					},
					"name": "ev5"
				},
				{
					"dataset": {
						"referenceName": "ir_04",
						"type": "DatasetReference"
					},
					"name": "ihiIr04"
				},
				{
					"dataset": {
						"referenceName": "weight",
						"type": "DatasetReference"
					},
					"name": "weight"
				},
				{
					"dataset": {
						"referenceName": "sphy",
						"type": "DatasetReference"
					},
					"name": "biSphy"
				},
				{
					"dataset": {
						"referenceName": "ir_04",
						"type": "DatasetReference"
					},
					"name": "biIr04"
				},
				{
					"dataset": {
						"referenceName": "sa_01",
						"type": "DatasetReference"
					},
					"name": "paSa01"
				},
				{
					"dataset": {
						"referenceName": "weight",
						"type": "DatasetReference"
					},
					"name": "paWeight"
				},
				{
					"dataset": {
						"referenceName": "active",
						"type": "DatasetReference"
					},
					"name": "slActive"
				},
				{
					"dataset": {
						"referenceName": "li_02",
						"type": "DatasetReference"
					},
					"name": "slLi02"
				},
				{
					"dataset": {
						"referenceName": "active",
						"type": "DatasetReference"
					},
					"name": "active"
				},
				{
					"dataset": {
						"referenceName": "exist",
						"type": "DatasetReference"
					},
					"name": "exist"
				},
				{
					"dataset": {
						"referenceName": "sphy",
						"type": "DatasetReference"
					},
					"name": "sphy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "medicine_info",
						"type": "DatasetReference"
					},
					"name": "medicineInfo"
				},
				{
					"dataset": {
						"referenceName": "behavior",
						"type": "DatasetReference"
					},
					"name": "behavior"
				},
				{
					"dataset": {
						"referenceName": "disease_info",
						"type": "DatasetReference"
					},
					"name": "diseaseInfo"
				},
				{
					"dataset": {
						"referenceName": "internal_health_info",
						"type": "DatasetReference"
					},
					"name": "internalHealthInfo"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo0"
				},
				{
					"dataset": {
						"referenceName": "blood_info",
						"type": "DatasetReference"
					},
					"name": "bloodInfo"
				},
				{
					"dataset": {
						"referenceName": "person",
						"type": "DatasetReference"
					},
					"name": "person"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo1"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo2"
				},
				{
					"dataset": {
						"referenceName": "sleep_info",
						"type": "DatasetReference"
					},
					"name": "sleepInfo"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo4"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo3"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo5"
				},
				{
					"dataset": {
						"referenceName": "time_info",
						"type": "DatasetReference"
					},
					"name": "timeInfo6"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select3"
				},
				{
					"name": "Select4"
				},
				{
					"name": "Select5"
				},
				{
					"name": "Select6"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select7"
				},
				{
					"name": "Select8"
				},
				{
					"name": "Select9"
				},
				{
					"name": "Select10"
				},
				{
					"name": "Join3"
				},
				{
					"name": "Select11"
				},
				{
					"name": "Select12"
				},
				{
					"name": "Select13"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Select14"
				},
				{
					"name": "Select15"
				},
				{
					"name": "Select16"
				},
				{
					"name": "Select17"
				},
				{
					"name": "Select18"
				},
				{
					"name": "Join5"
				},
				{
					"name": "Select19"
				},
				{
					"name": "Select20"
				},
				{
					"name": "Select21"
				},
				{
					"name": "Select22"
				},
				{
					"name": "Select23"
				}
			],
			"script": "source(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Housing complex'} as string,\n\t\t{ 'Gender'} as string,\n\t\t{ 'Birthday'} as string,\n\t\t{ 'Age'} as string,\n\t\t{ 'certification of care need'} as string,\n\t\t{ 'Number of residents'} as string,\n\t\t{ 'Height'} as string,\n\t\t{ 'Body weight'} as string,\n\t\t{ 'Stride（cm)'} as string,\n\t\t{ 'Medical history'} as string,\n\t\t{ 'Disease name'} as string,\n\t\t{ 'Regular hospital consultation'} as string,\n\t\t{ 'Antihypertensive'} as string,\n\t\t{ 'Other1'} as string,\n\t\t{ 'Smoking'} as string,\n\t\t{ 'Drinking'} as string,\n\t\t{ 'Family composition of living together'} as string,\n\t\t{  'Care need certification time'} as string,\n\t\t{ 'Hobby・preference・habit'} as string,\n\t\t{  'Activities'} as string,\n\t\t{ 'Community'} as string,\n\t\t{ 'Everyday'} as string,\n\t\t{ 'Everyday With or without blood pressure measurement'} as string,\n\t\t{ 'Whether or not to use a pedometer on a daily basis'} as string,\n\t\t{ 'Other2'} as string,\n\t\t{ 'right Measured value'} as string,\n\t\t{ 'right Evaluation'} as string,\n\t\t{ 'right Presence or absence of abnormality'} as string,\n\t\t{ 'left easured value'} as string,\n\t\t{ 'left Evaluation'} as string,\n\t\t{ 'left Presence or absence of abnormality'} as string,\n\t\t{ 'Locomotive Measured value'} as string,\n\t\t{ 'Locomotive Presence or absence of abnormality'                } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sa01\nsource(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Date confirmed'} as string,\n\t\t{ 'Appetite Questionnaire results'} as string,\n\t\t{'Eating habit Questionnaire results'} as string,\n\t\t{ 'Preference Questionnaire results'} as string,\n\t\t{ 'Sleep Questionnaire results'} as string,\n\t\t{'Anxiety about health Questionnaire results'} as string,\n\t\t{ 'Anxiety about forgetfulness Questionnaire results'} as string,\n\t\t{ 'I can go up and down stairs without being transmitted to the railing or wall'} as string,\n\t\t{ 'I can get up from the chair'} as string,\n\t\t{ 'I can walk for more than 15 minutes'} as string,\n\t\t{ 'I can walk without a cane'} as string,\n\t\t{ 'I am actively going out'} as string,\n\t\t{ 'Walking function Score'} as string,\n\t\t{ 'Walking function Evaluation'} as string,\n\t\t{ 'Do the cleaning and washing yourself'} as string,\n\t\t{ 'Shop for daily necessities yourself'} as string,\n\t\t{'I can prepare your own meals'} as string,\n\t\t{ 'I can write the documents to be submitted to the government office by myself'} as string,\n\t\t{ '自分で電話帳を調べ、電話をかけることができる'} as string,\n\t\t{ '生活機能 Score'} as string,\n\t\t{ '生活機能 Evaluation'} as string,\n\t\t{ 'I have a counselor in case of trouble'} as string,\n\t\t{ \"I have a counselor when I'm sick\"} as string,\n\t\t{ \"I have someone who will take me to the hospital when I'm sick\"} as string,\n\t\t{ 'There are people who take care of me when I fall asleep'} as string,\n\t\t{ 'Relying on someone'} as string,\n\t\t{ 'ソーシャルサポート Score'} as string,\n\t\t{ 'ソーシャルサポート Evaluation'} as string,\n\t\t{ 'No weight loss of more than 2-3 kg in the last 6 months'} as string,\n\t\t{ 'No weight gain of more than 2-3 kg in the last 2 months'} as string,\n\t\t{ 'I can eat hard food'} as string,\n\t\t{When I drink tea or soup, I don't get sick} as string,\n\t\t{I don't mind thirst} as string,\n\t\t{ '口腔・栄養 Score'} as string,\n\t\t{ '口腔・栄養 Evaluation'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> li02\nsource(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Health status'} as string,\n\t\t{ 'Biological function'} as string,\n\t\t{ 'Exercise function'} as string,\n\t\t{ 'Nutrition'} as string,\n\t\t{ 'Cognitive function'} as string,\n\t\t{ 'Fall'} as string,\n\t\t{ 'High blood pressure'} as string,\n\t\t{ 'Arrhythmia'} as string,\n\t\t{ 'Osteoporosis'} as string,\n\t\t{ 'Diabetes mellitus'} as string,\n\t\t{ 'Exercise guidance'} as string,\n\t\t{ 'Nutrition guidance'} as string,\n\t\t{'Life guidance'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ev05\nsource(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Health status'} as string,\n\t\t{ 'Biological function'} as string,\n\t\t{ 'Exercise function'} as string,\n\t\t{ 'Nutrition'} as string,\n\t\t{ 'Cognitive function'} as string,\n\t\t{ 'Fall'} as string,\n\t\t{ 'High blood pressure'} as string,\n\t\t{ 'Arrhythmia'} as string,\n\t\t{ 'Osteoporosis'} as string,\n\t\t{ 'Diabetes mellitus'} as string,\n\t\t{ 'Exercise guidance'} as string,\n\t\t{ 'Nutrition guidance'} as string,\n\t\t{'Life guidance'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ev5\nsource(output(\n\t\t{'No'} as string,\n\t\t{ 'SubjectID'} as string,\n\t\t{ 'Presence or absence of inspection record'} as string,\n\t\t{ 'Inspection date'} as string,\n\t\t{ 'Total cholesterol'} as string,\n\t\t{ 'LDL cholesterol'} as string,\n\t\t{ 'HDL cholesterol'} as string,\n\t\t{ 'Urea nitrogen'} as string,\n\t\t{ 'Creatinine'} as string,\n\t\t{ 'Uric acid'} as string,\n\t\t{ 'Urine protein'} as string,\n\t\t{ 'Blood sugar'} as string,\n\t\t{ 'Diabetes diagnosis age'} as string,\n\t\t{ 'HbA1c'} as string,\n\t\t{ 'AST'} as string,\n\t\t{ 'ALT'} as string,\n\t\t{ 'LDH'} as string,\n\t\t{ 'Retinopathy'} as string,\n\t\t{ 'Hypertension diagnosis age sodium'} as string,\n\t\t{ 'Na'} as string,\n\t\t{ 'K'} as string,\n\t\t{ 'ECG abnormalities'} as string,\n\t\t{ 'Triglyceride'} as string,\n\t\t{ 'Diagnosis age of dyslipidemia'} as string,\n\t\t{ 'History of coronary artery disease'} as string,\n\t\t{ 'Chronic kidney disease diagnosis age'} as string,\n\t\t{ 'Total protein'} as string,\n\t\t{ 'Albumin'} as string,\n\t\t{ 'Hematuria'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ihiIr04\nsource(output(\n\t\tdevice as string,\n\t\t{ serialNo} as string,\n\t\t{ Battery Level} as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Body Fat Percentage} as string,\n\t\t{ Basal Metabolism} as string,\n\t\t{ Skeletal Muscle Percentage} as string,\n\t\t{ Weight} as string,\n\t\t{ BMI} as string,\n\t\t{ Visceral Fat Level} as string,\n\t\t{ Body Age} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> weight\nsource(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as long,\n\t\t{ Battery Level} as short,\n\t\t{ Measure Date Time} as string,\n\t\t{ Systolic Pressure} as short,\n\t\t{ Diastolic Pressure} as short,\n\t\t{ Mean Arterial Pressure} as short,\n\t\t{ Pulse Rate} as short,\n\t\t{ Irregular Pulse Flag} as boolean,\n\t\t{ Pulse Rate Range Detection Flag} as boolean,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> biSphy\nsource(output(\n\t\t{'No'} as string,\n\t\t{ 'SubjectID'} as string,\n\t\t{ 'Presence or absence of inspection record'} as string,\n\t\t{ 'Inspection date'} as string,\n\t\t{ 'Total cholesterol'} as string,\n\t\t{ 'LDL cholesterol'} as string,\n\t\t{ 'HDL cholesterol'} as string,\n\t\t{ 'Urea nitrogen'} as string,\n\t\t{ 'Creatinine'} as string,\n\t\t{ 'Uric acid'} as string,\n\t\t{ 'Urine protein'} as string,\n\t\t{ 'Blood sugar'} as string,\n\t\t{ 'Diabetes diagnosis age'} as string,\n\t\t{ 'HbA1c'} as string,\n\t\t{ 'AST'} as string,\n\t\t{ 'ALT'} as string,\n\t\t{ 'LDH'} as string,\n\t\t{ 'Retinopathy'} as string,\n\t\t{ 'Hypertension diagnosis age sodium'} as string,\n\t\t{ 'Na'} as string,\n\t\t{ 'K'} as string,\n\t\t{ 'ECG abnormalities'} as string,\n\t\t{ 'Triglyceride'} as string,\n\t\t{ 'Diagnosis age of dyslipidemia'} as string,\n\t\t{ 'History of coronary artery disease'} as string,\n\t\t{ 'Chronic kidney disease diagnosis age'} as string,\n\t\t{ 'Total protein'} as string,\n\t\t{ 'Albumin'} as string,\n\t\t{ 'Hematuria'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> biIr04\nsource(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Housing complex'} as string,\n\t\t{ 'Gender'} as string,\n\t\t{ 'Birthday'} as string,\n\t\t{ 'Age'} as string,\n\t\t{ 'certification of care need'} as string,\n\t\t{ 'Number of residents'} as string,\n\t\t{ 'Height'} as string,\n\t\t{ 'Body weight'} as string,\n\t\t{ 'Stride（cm)'} as string,\n\t\t{ 'Medical history'} as string,\n\t\t{ 'Disease name'} as string,\n\t\t{ 'Regular hospital consultation'} as string,\n\t\t{ 'Antihypertensive'} as string,\n\t\t{ 'Other1'} as string,\n\t\t{ 'Smoking'} as string,\n\t\t{ 'Drinking'} as string,\n\t\t{ 'Family composition of living together'} as string,\n\t\t{  'Care need certification time'} as string,\n\t\t{ 'Hobby・preference・habit'} as string,\n\t\t{  'Activities'} as string,\n\t\t{ 'Community'} as string,\n\t\t{ 'Everyday'} as string,\n\t\t{ 'Everyday With or without blood pressure measurement'} as string,\n\t\t{ 'Whether or not to use a pedometer on a daily basis'} as string,\n\t\t{ 'Other2'} as string,\n\t\t{ 'right Measured value'} as string,\n\t\t{ 'right Evaluation'} as string,\n\t\t{ 'right Presence or absence of abnormality'} as string,\n\t\t{ 'left easured value'} as string,\n\t\t{ 'left Evaluation'} as string,\n\t\t{ 'left Presence or absence of abnormality'} as string,\n\t\t{ 'Locomotive Measured value'} as string,\n\t\t{ 'Locomotive Presence or absence of abnormality'                } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> paSa01\nsource(output(\n\t\tdevice as string,\n\t\t{ serialNo} as string,\n\t\t{ Battery Level} as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Body Fat Percentage} as string,\n\t\t{ Basal Metabolism} as string,\n\t\t{ Skeletal Muscle Percentage} as string,\n\t\t{ Weight} as string,\n\t\t{ BMI} as string,\n\t\t{ Visceral Fat Level} as string,\n\t\t{ Body Age} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> paWeight\nsource(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as string,\n\t\t{ Battery Level} as short,\n\t\t{ Measure Date Time} as string,\n\t\t{ Temperature} as short,\n\t\t{ Step} as short,\n\t\t{ Calorie} as short,\n\t\t{ Sleep State} as short,\n\t\t{ Sleep Hour} as boolean,\n\t\t{ Sleep Minute} as boolean,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> slActive\nsource(output(\n\t\t{'No'} as string,\n\t\t{'SubjectID'} as string,\n\t\t{ 'Date confirmed'} as string,\n\t\t{ 'Appetite Questionnaire results'} as string,\n\t\t{'Eating habit Questionnaire results'} as string,\n\t\t{ 'Preference Questionnaire results'} as string,\n\t\t{ 'Sleep Questionnaire results'} as string,\n\t\t{'Anxiety about health Questionnaire results'} as string,\n\t\t{ 'Anxiety about forgetfulness Questionnaire results'} as string,\n\t\t{ 'I can go up and down stairs without being transmitted to the railing or wall'} as string,\n\t\t{ 'I can get up from the chair'} as string,\n\t\t{ 'I can walk for more than 15 minutes'} as string,\n\t\t{ 'I can walk without a cane'} as string,\n\t\t{ 'I am actively going out'} as string,\n\t\t{ 'Walking function Score'} as string,\n\t\t{ 'Walking function Evaluation'} as string,\n\t\t{ 'Do the cleaning and washing yourself'} as string,\n\t\t{ 'Shop for daily necessities yourself'} as string,\n\t\t{'I can prepare your own meals'} as string,\n\t\t{ 'I can write the documents to be submitted to the government office by myself'} as string,\n\t\t{ '自分で電話帳を調べ、電話をかけることができる'} as string,\n\t\t{ '生活機能 Score'} as string,\n\t\t{ '生活機能 Evaluation'} as string,\n\t\t{ 'I have a counselor in case of trouble'} as string,\n\t\t{ \"I have a counselor when I'm sick\"} as string,\n\t\t{ \"I have someone who will take me to the hospital when I'm sick\"} as string,\n\t\t{ 'There are people who take care of me when I fall asleep'} as string,\n\t\t{ 'Relying on someone'} as string,\n\t\t{ 'ソーシャルサポート Score'} as string,\n\t\t{ 'ソーシャルサポート Evaluation'} as string,\n\t\t{ 'No weight loss of more than 2-3 kg in the last 6 months'} as string,\n\t\t{ 'No weight gain of more than 2-3 kg in the last 2 months'} as string,\n\t\t{ 'I can eat hard food'} as string,\n\t\t{When I drink tea or soup, I don't get sick} as string,\n\t\t{I don't mind thirst} as string,\n\t\t{ '口腔・栄養 Score'} as string,\n\t\t{ '口腔・栄養 Evaluation'} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> slLi02\nsource(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as string,\n\t\t{ Battery Level} as short,\n\t\t{ Measure Date Time} as string,\n\t\t{ Temperature} as short,\n\t\t{ Step} as short,\n\t\t{ Calorie} as short,\n\t\t{ Sleep State} as short,\n\t\t{ Sleep Hour} as boolean,\n\t\t{ Sleep Minute} as boolean,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> active\nsource(output(\n\t\tDevice as string,\n\t\t{ Measure Date Time} as string,\n\t\t{ Exist} as string,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> exist\nsource(output(\n\t\tDevice as string,\n\t\t{ SerialNo} as long,\n\t\t{ Battery Level} as short,\n\t\t{ Measure Date Time} as string,\n\t\t{ Systolic Pressure} as short,\n\t\t{ Diastolic Pressure} as short,\n\t\t{ Mean Arterial Pressure} as short,\n\t\t{ Pulse Rate} as short,\n\t\t{ Irregular Pulse Flag} as boolean,\n\t\t{ Pulse Rate Range Detection Flag} as boolean,\n\t\tSubjectID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sphy\nsa01 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Antihypertensive'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nli02 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Appetite Questionnaire results'},\n\t\t{ 'Preference Questionnaire results'},\n\t\t{ 'Sleep Questionnaire results'},\n\t\t{'Anxiety about health Questionnaire results'},\n\t\t{ 'I can go up and down stairs without being transmitted to the railing or wall'},\n\t\t{ 'I can walk for more than 15 minutes'},\n\t\t{ 'I am actively going out'},\n\t\t{ 'Do the cleaning and washing yourself'},\n\t\t{ 'Shop for daily necessities yourself'},\n\t\t{ 'No weight loss of more than 2-3 kg in the last 6 months'},\n\t\t{ 'No weight gain of more than 2-3 kg in the last 2 months'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, Select3 join(Select2@{'SubjectID'} == Select3@{'SubjectID'},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nev05 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Exercise function'},\n\t\t{ 'Nutrition'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nev5 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Arrhythmia'},\n\t\t{ 'Diabetes mellitus'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nihiIr04 select(mapColumn(\n\t\t{ 'SubjectID'},\n\t\t{ 'Inspection date'},\n\t\t{ 'Total cholesterol'},\n\t\t{ 'LDL cholesterol'},\n\t\t{ 'HDL cholesterol'},\n\t\t{ 'HbA1c'},\n\t\t{ 'AST'},\n\t\t{ 'ALT'},\n\t\t{ 'LDH'},\n\t\t{ 'Na'},\n\t\t{ 'K'},\n\t\t{ 'ECG abnormalities'},\n\t\t{ 'History of coronary artery disease'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nweight select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Body Fat Percentage},\n\t\t{ Basal Metabolism},\n\t\tSubjectID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6, Select5 join(SubjectID == { 'SubjectID'},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Body Fat Percentage},\n\t\t{ Basal Metabolism},\n\t\tSubjectID,\n\t\t{ 'Inspection date'},\n\t\t{ 'Total cholesterol'},\n\t\t{ 'LDL cholesterol'},\n\t\t{ 'HDL cholesterol'},\n\t\t{ 'HbA1c'},\n\t\t{ 'AST'},\n\t\t{ 'ALT'},\n\t\t{ 'LDH'},\n\t\t{ 'Na'},\n\t\t{ 'K'},\n\t\t{ 'ECG abnormalities'},\n\t\t{ 'History of coronary artery disease'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nJoin2 select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nbiSphy select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Systolic Pressure},\n\t\t{ Diastolic Pressure},\n\t\t{ Mean Arterial Pressure},\n\t\t{ Pulse Rate},\n\t\t{ Irregular Pulse Flag},\n\t\t{ Pulse Rate Range Detection Flag},\n\t\tSubjectID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select9\nbiIr04 select(mapColumn(\n\t\t{ 'SubjectID'},\n\t\t{ 'Blood sugar'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select10\nSelect9, Select10 join(SubjectID == { 'SubjectID'},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Systolic Pressure},\n\t\t{ Diastolic Pressure},\n\t\t{ Mean Arterial Pressure},\n\t\t{ Pulse Rate},\n\t\t{ Irregular Pulse Flag},\n\t\t{ Pulse Rate Range Detection Flag},\n\t\tSubjectID,\n\t\t{ 'Blood sugar'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select11\npaSa01 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Gender'},\n\t\t{ 'Age'},\n\t\t{ 'Height'},\n\t\t{ 'Body weight'},\n\t\t{ 'Smoking'},\n\t\t{ 'Drinking'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select12\npaWeight select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ BMI},\n\t\t{ Body Age},\n\t\tSubjectID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select13\nSelect13, Select12 join(SubjectID == {'SubjectID'},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ BMI},\n\t\t{ Body Age},\n\t\tSubjectID,\n\t\t{ 'Gender'},\n\t\t{ 'Age'},\n\t\t{ 'Height'},\n\t\t{ 'Body weight'},\n\t\t{ 'Smoking'},\n\t\t{ 'Drinking'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select14\nSelect11 select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select15\nSelect14 select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select16\nslActive select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Sleep Hour},\n\t\t{ Sleep Minute},\n\t\tSubjectID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select17\nslLi02 select(mapColumn(\n\t\t{'SubjectID'},\n\t\t{ 'Sleep Questionnaire results'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select18\nSelect17, Select18 join(SubjectID == {'SubjectID'},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5 select(mapColumn(\n\t\t{ Measure Date Time},\n\t\t{ Sleep Hour},\n\t\t{ Sleep Minute},\n\t\t{'SubjectID'},\n\t\t{ 'Sleep Questionnaire results'}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select19\nactive select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select20\nSelect19 select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select21\nexist select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select22\nsphy select(mapColumn(\n\t\t{ Measure Date Time}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select23\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> medicineInfo\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> behavior\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> diseaseInfo\nSelect7 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> internalHealthInfo\nSelect8 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo0\nSelect11 sink(input(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> bloodInfo\nSelect14 sink(input(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> person\nSelect15 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo1\nSelect16 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo2\nSelect19 sink(input(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sleepInfo\nSelect20 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo4\nSelect21 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo3\nSelect22 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo5\nSelect23 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> timeInfo6"
		}
	}
}